#include <iostream>
#include <vector>

using namespace std;

int knapsack(vector<int> wt,vector<int> price,int w,int n){
    if(w==0 || n==0)
        return 0;
    
    if(w<wt[n])
        return knapsack(wt,price,w,n-1);
    else
        return max(price[n] + knapsack(wt,price,w-wt[n],n-1),knapsack(wt,price,w,n-1));
    
    
}
int main() {
	int t;
	cin>>t;
	while(t--){
	    int n,W;
	    cin>>n>>W;
	    vector<int> wt;
	    vector<int> price;
	    int temp;
	    for(int i=0;i<n;i++){
	        cin>>temp;
	        wt.push_back(temp);
	    }
	    for(int i=0;i<n;i++){
	        cin>>temp;
	        price.push_back(temp);
	    }
	    int maxProfit = knapsack(wt,price,W,n);
	    cout<<maxProfit<<endl;
	}
	return 0;
}
